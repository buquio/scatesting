Good evening, these are the tools for the project

Node JS
https://nodejs.org/

Git
https://git-scm.com/

Yarn (For Installing Packages)
https://yarnpkg.com/

Redux Devtools
https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en

React Devtools
https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en

Steps and setup for project

1 Install all tools needed for the project and set them up (especially git credentials, watch tutorials)

2 Fork the repo
https://github.com/zurichat/zc_plugin_channels

3 Create a branch from dev branch (slackname.fe-dev)

4 Clone the repo on your local machine

5 Navigate to the project root folder, open the frontend folder, right click and select "git bash here"

6 Check out to your branch (git checkout slackname.fe-dev)

7 Run (yarn) to install all dependencies

8 Run (code .) to open the project in Visual Studio Code

9 In the vscode integrated terminal or git bash run (yarn start) to start the dev server

10 Write your code

11 Commit and push to your repo
HOW TO SYNC
1.On the forked repo on github fetch upstream on main and dev branch 
2.then checkout to your branch and pull from dev to your branch(on vscode))

NB If you need to install any dependency please inform me first (state the package and why you need it)

.......................
Add origin = git remote add origin (already have origin if you clone)
12.	Add upstream = git remote add upstream 

16.	After working on your own file
17.	Add the files to git using git add .
18.	Commit your files using git commit ‚Äìm ‚Äúmessage‚Äù
3.	git pull upstream dev   OR 	 git pull upstream main
19.	Push your files to your origin using: git push origin dev OR git push origin main OR git push origin buquio.fe-dev
20.	After pushing create pull request from your github page

- MAKING PULL REQUESTS
As soon as you're done with the feature and want to create a PR 

1 Commit and push to your repo all changes if any

2 Head to the forked repository

3 Select Pull Requests

4 Create Pull Request

5 (main repo) dev <-- (forked repo) slackname.fe-dev

6 Reference the issue you were given

7 Add reviewer (mrkendrick)

8 Make sure there are no conflicts (if any resolve it or call my attention, DO NOT CREATE THE PR)

9 If everything goes well, Create the PR

/////////////////
Team Ceolho  -Frontend
Issues Title: Channels Details & Settings -File List #252
Description: As a user on clicking to see any channel info I should be able to also see all files associated with that channel.
How to Navigate to my task: on the announcement channel(default tab is on about) navigate to members tab, then see the section below- files (that's my task)

issue link: https://github.com/zurichat/zc_plugin_channels/issues/252
Live Link: https://channels.zuri.chat/channel-detail
PR Link: https://github.com/zurichat/zc_plugin_channels/pull/386
Design Link: https://www.figma.com/file/cgUnQ1il3Y9sEZZXJ6nNi6/Channels-HNG-Task?node-id=25%3A4397
Image attached in the issue comment @mark (edited) 



//////////////////////////
If you've gone through the design you'll notice chakra ui has most of those components by default so do well to learn how to use the UI component Library

Write resuable decent code.
No need for HTML Tags, chakra ui has it all
You'll barely write in a css file in this project if you know what you're doing
Memoize static data so they don't get recreate on every render. 
If you have list of items, instead of duplicating you mock the data in an array of obj and run a function or an expression to return JSX
Component files should be named as .jsx not .js
Work on your file only, if you need to see what you've done mount your component in App.js and remove it before you create your PR, you team lead will combine all the components to one. If you're confused ask, if you have questions ask.
I'm in charge of PR that's why I'm shouting üò≠üò≠ don't give me too much work abeg, if I end up touching your code my name will be will be all over the place and might jeopardize your promotion.
Before you commit or create a PR run git fetch upstream to get the updated code from the base repo and ensure your branch is in sync with the dev branch, 
if it's not in sync pull from dev, commit your files and push to your branch, then you can create your PR. If you encounter conflicts let me know.


On the forked repo you might see a message saying commits are behind blah blah blah, create a PR youraccount:dev <-- mainrepo:dev
Then merge
Afterwards sync your branch with the dev branch
Any questions?



Team Ceolho  -Frontend
Issues Title: Channels Details & Settings -File List #252
issue link: https://github.com/zurichat/zc_plugin_channels/issues/252
Live Link: https://channels.zuri.chat/channel-detail
PR Link: https://github.com/zurichat/zc_plugin_channels/pull/386
Design Link: https://www.figma.com/file/cgUnQ1il3Y9sEZZXJ6nNi6/Channels-HNG-Task?node-id=25%3A4397
Image attached in the issue comment @mark (edited) 

///////////////////////////
@channel All submitted tickets have been rejected. For a ticket to be accepted, following conditions need to be met: 
1. It must be live on your plugin domain. That means it must be live on a place like dm.zuri.chat. NOT vercel, netlify, etc.
2. You must link to the location where it can be live tested 
3. The commit must be clear
4. Documentation tickets are not accepted
5. Your username must be clear. 
6. There must a comment by your team lead or designated team testers that this issue is fixed and is ready for approval.

COMMIT REQ
Also we need to see that the commit that did it is you, so there should be a link to the merged commit. 
Your username there should allow us infer that it's the same person on slack



//////////////////////
Contribution Guide - Steps to Collaborate on the Repository for Team Members
Fork and Clone Repository
Visit the Repository to the Project on Github Website: https://github.com/zurichat/zc_plugin_channels
Fork the repository: Click the "Fork" button on the upper right corner of the Repo page.
Make a Local Clone: Clone the forked repository to your local machine (computer)
Click on the "Code" button on the Repo page
Copy the URL for the forked Repo "https://github.com/your-github-username/zc_plugin_channels.git"
Create a Folder on your Local machine / Computer for the project Workspace
Open Command prompt / Terminal in the same folder location
In your Terminal, type: git clone@https://github.com/your-github-username/zc_plugin_channels.git
Add "Remote To" and "Pull From" Upstream
Add a Remote to Upstream to your Repo:
In your terminal, type: git remote add upstream https://github.com/Valenteeena/zc_plugin_channels
Pull from upstream to download all changes in the project using git pull upstream develop
Finish whatever assigned Task / Issue
Open the Project up in your code Editor
Complete your assigned task / Feature on your local machine.
Create and Commit Changes to a New Branch
When you are ready to add and push your feature / task to the Repo,
Create a new branch with your feature / task name you are adding e.g "ft-Add new channel". To do this, type: git checkout -b ft-Add new channel
Add your changes using: git add .
Commit your changes to the branch with a message using git commit -m "Commit message"
* Note: if the Feature is a bug fix, use bug:message for your branch and commit message
Push New Branch to "Origin" Repository
To make sure there are no conflict, Pull from upstream using git pull upstream develop
Push your branch changes to the Repo using git push origin "ft-yourTask"
Create Pull Request
Once you push the changes to your repo, the Compare & pull request button will appear in GitHub page of your repo.
Click the button and make your request. Leave a comment in your request
Click Create pull request to open a new pull request
If you are asked to make changes on the same feature, repeat steps 8 to 13 to add more commits to your pull request.